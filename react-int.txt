link: https://www.simplilearn.com/tutorials/reactjs-tutorial/reactjs-interview-questions

1. What are the features of React?
use  of state: able to rerender individual pieces of a page without having to rerender the entire page
virtual DOM: a lightweight copy of the actual DOM that react uses to register changes and determine re-rendering
JSX: pseudo-language that is used to creat HTML elements with JS
----------------
Components: splits webpage into independent, reusable pieces that can be processed seperately
virtual DOM: a lightweight copy of the actual DOM that react uses to register changes and determine re-rendering OF INDIVIDUAL COMPONENTS
one-way data binding- unidirectional flow of data (parent>child)

2. What is JSX?
JSX: pseudo-language that is used to create HTML elements with JS



3. Can web browsers read JSX directly?
No, web browsers need an interpreter plug-in that converts JSX to HTML elements


4. What is the virtual DOM?
the virtual DOM is a lightweightcopy of the actual DOM. When a change is made to a React component (ie a state change) the virtual DOM is changed.
React compares the virtual DOM to the actual DOM and will only update the actual DOM with the changes made to the virtual DOM


5. Why use React instead of other frameworks, like Angular?

-----------------
Easy creation of dynamic applications: React makes it easier to create dynamic web applications because it provides less coding and provides more functionality, whereas,
with JavaScript applications, code tends to get complex very quickly.


Improved performance: React uses virtual DOM, which makes web applications perform faster. Virtual DOM compares its previous state and updates only those components in
the real DOM, whose states have changed, rather than updating all the components — like conventional web applications.

Reusable components: Components are the building blocks of any React application, and a single app usually consists of multiple components. These components have their own
logic and controls, and they can be reused through the application, which, in turn, dramatically reduces the development time of an application.

Unidirectional data flow: React follows a unidirectional data flow. This means that when designing a React app, we often nest child components within parent components. And
since the data flows in a single direction, it becomes easier to debug errors and know where the problem occurs in an application at the moment.

Dedicated tools for easy debugging: Facebook has released a chrome extension that we can use to debug React applications. This makes the process of debugging React to web
applications faster and easier.

6. What is the difference between the ES6 and ES5 standards?
Arrow functions
spread operator
Promise

---------------
require (ES5) vs import (ES6)
export


7. How do you create a React app?
most efficient to use Node package via npm (ex create-react-app)




8. What is an event in React?
an event is any change that indicates a user interaction or system event

---------
JSX events use camelCase (HTML use kebob-case)



9. How do you create an event in React?
apply an event listener to the desired JSX element



10. What are synthetic events in React?





11. Explain how lists (UL and OL) work in React
lists can be rendered from array using the .map() method. they can also be produced manually in the same way as vanilla JS



12. Why is there a need for using keys in Lists?
-----------------
A key is a unique identifier and it is used to identify which items have changed, been updated or deleted from the lists
It also helps to determine which components need to be re-rendered instead of re-rendering all the components every time. Therefore, it increases performance, as only the
updated components are re-rendered

keys = unique identifiers that help React determine which components need to be rerendered


13. What are forms in React?
forms take are a way to collect and process user inputed data



15. How do you write comments in React?
{/* ______ */}



16. What is an arrow function and how is it used in React?
an arrow function is a shorthand way to create a function. they can be stored in constant/mutable variables

----------
don't need to use 'this' in arrow functions



17. How is React different from React Native?





18. How is React different from Angular?





19. What are the components in React?
components are reusable piecs of code that serve a certain purpose. They can internally manage thier own state.
--------------------------------
Components are the building blocks of any React application, and a single app usually consists of multiple components. A component is essentially a piece of the user interface. It splits the user interface into independent, reusable parts that can be processed separately.

functional and class components

functional: no state, except with hooks
  no use of this

class: stateful
  use this and binding
  can define internal methods
  to use state, must use constructor




20. What is the use of render() in React?
the render xis the function that renders elements to the DOM
---------------




21. What is a state in React?
state is a way to determine if the component should rerender
------------------------------
state is an object that contains information about the component
when state is changed, the component rerenders
state can be changed by a user interaction or system operation


22. How do you implement state in React?
class: state object in the constructor function
function: useState hook



23. How do you update the state of a component?
class: setState({})
function: 2nd element in the array returned by useState



24. What are props in React?
props are immutable data that is passed to a component by its parent. props can be accessed throughout the component



25. How do you pass props between components?
props are passed by using similar syntax to HTML attributes



26. What are the differences between state and props?
state are mutable data that is managed by a component
props are immutable data that is passed to a component by its parent



27. What is a higher-order component in React?
A higher order component is a component that is made of smaller components. higher order components help to organize and manage other components in an application




28. How can you embed two or more components into one?
By using a higher-order component. The child components can be conditionally rendered and/or controlled by the parent component



29. What are the differences between class and functional components?
class: this keyword, state object in constructor funct, can define methods w/in class, render()

function: no explicit state (add state via hooks)

30. Explain the lifecycle methods of components.
----------------
getInitialState(): This is executed before the creation of the component.
componentDidMount(): Is executed when the component gets rendered and placed on the DOM.
shouldComponentUpdate(): Is invoked when a component determines changes to the DOM and returns a “true” or “false” value based on certain conditions.
componentDidUpdate(): Is invoked immediately after rendering takes place.
componentWillUnmount(): Is invoked immediately before a component is destroyed and unmounted permanently.
